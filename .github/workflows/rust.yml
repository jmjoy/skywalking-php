# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Rust

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - "**"

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: "1"
  RUSTFLAGS: "-D warnings"
  LLVM_CONFIG_PATH: llvm-config-10

jobs:
  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-12
        version:
          - php: "8.1"
            swoole: "5.0.0"

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Install libclang and protobuf for Linux
        if: matrix.os == 'ubuntu-20.04'
        run: sudo apt-get install -y llvm-10-dev libclang-10-dev protobuf-compiler

      - name: Install protobuf for Macos
        if: matrix.os == 'macos-12'
        run: brew install protobuf

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.version.php }}
          tools: php-config, composer:v2
          extensions: opcache, swoole-${{ matrix.version.swoole }}, mysqlnd, pdo, xml, bcmath, calendar, ctype, dom, exif, gettext, iconv, json, intl, mbstring, mysqli, pdo_mysql, phar, posix, readline, xmlreader, xmlwriter, yaml, zip

      - name: Setup php-fpm for Linux
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo apt-get install -y php${{ matrix.version.php }}-fpm
          sudo ln -sf /usr/sbin/php-fpm${{ matrix.version.php }} /usr/sbin/php-fpm

      # - name: Setup php-fpm for Macos
      #   if: matrix.os == 'macos-12'
      #   run: |
      #     brew install php@${{ matrix.version.php }}

      - name: PHP version
        run: |
          php --version
          php -m
          php-fpm --version
          php-fpm -m
          php-config || true
          php -r 'echo "Swoole version: " . phpversion("swoole") . "\n";'
          composer --version

          [[ `php --version` == PHP\ ${{ matrix.version.php }}.* ]] || exit 1;
          [[ `php-fpm --version` == PHP\ ${{ matrix.version.php }}.* ]] || exit 1;
          [[ `php-config --version` == ${{ matrix.version.php }}.* ]] || exit 1;

      - run: ls -alh /usr/local/Cellar/php/8.1.10_1/pecl/20210902

      - name: Install Rust Stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy

      - name: Setup cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ matrix.os }}-test-${{ matrix.version.php }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Cargo build
        uses: actions-rs/cargo@v1
        with:
          toolchain: stable
          command: build
          args: --release --workspace

      - run: ls -alh target/release
        continue-on-error: true

      - name: Docker compose
        if: matrix.os == 'ubuntu-20.04'
        run: docker compose up -d

      - name: Vagrant up for docker compose
        if: matrix.os == 'macos-12'
        run: vagrant up

      - name: Composer install
        run: composer install --working-dir=tests/php

      - name: Cargo test
        uses: actions-rs/cargo@v1
        with:
          toolchain: stable
          command: test
          args: --release --workspace
        continue-on-error: true
      
      - name: View logs
        run: |
          cat /tmp/*.log
          
